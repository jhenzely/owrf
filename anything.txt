## Just a mess, my ideas in this file
$see_it=0
$rp_name=<name_of_repeated_network>

while true; do
  sc_out=$(iwinfo wlan0 scan | grep -c -o $rp_name)
  if [ $sc_out -ge 1 ];then
    see_it=$((see_it+1))
  fi
  if [ see_it -ge 5 ]; then
    uci set wireless.@wifi-iface[0].disabled=1; wifi; ## here instead of zero comes the exact value
  fi
  sleep 2
done
uci show wireless | grep $rp_name | grep -o \\[[0-9]\]

##### It will be better to simply disable all other networks which are not marked as 'ap'
## uci commit should be avoided in order to save lifespan of NOR Flash mem.

## Get wifi-iface ID from any config option:
uci show wireless | egrep "(sta|ap)" | grep -o \\[[0-9]\]
uci show wireless | egrep "\.ssid" | egrep -o "\[2\]"

uci show wireless | grep "<network_name>" | grep -E -o "\[([0-9])\]" | grep -o "[[:digit:]]"

i=0
for i in $stas ; do
  uci set wireless.@wifi-iface[$i].disabled=1
done

#!/bin/sh

save_ssids ()
{
stas=$(uci show wireless | grep "sta" | grep -o \[0-9])
 for i in $stas ; do
   names=$names""$(uci show wireless | egrep "\.ssid" | grep -i "\[$i\]" | cut -d '=' -f 2)"|"
 done
}
save_ssids

fail_back () {
scan=$(iwinfo phy0 scan)
i_see=$(echo "$scan" | grep -E -o "$names" )
network=$(echo "$scan" | grep -E "ESSID:|Signal: -[2-7][0-9]" | grep -o "$i_see" | cut -d "|" -f 1)
sta_id=$(uci show wireless | grep "$network" | grep -E -o "\[([0-9])\]" | grep -o "[[:digit:]]")

if [ $(echo $sta_id | grep -E -c "\w+") -eq 1 ] ; then
uci set wireless.@wifi-iface[$sta_id].disabled=0; wifi ; sta_off="0" ; fi
}

while true ; do
	if [ $sta_off -eq 1 ] ; then
	fail_back; fi
	sleep 45
done
